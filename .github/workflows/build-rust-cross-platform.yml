name: Build Rust Cross Platform

on:
  workflow_call:

jobs:
  build_rust:
    name: Build for ${{ matrix.settings.os }} ${{ matrix.settings.target }}
    runs-on: ${{ matrix.settings.os }}
    strategy:
      fail-fast: false
      matrix:
        settings:
          - os: macos-13
            target: x86_64-apple-darwin
          - os: macos-13
            target: aarch64-apple-darwin
          - os: windows-2022
            target: x86_64-pc-windows-msvc
          # caution: updating the linux runner OS version for GNU
          #   targets will likely break the library for older OS versions.
          #   prefer using oldest supported runner for for these targets
          - os: ubuntu-22.04
            target: x86_64-unknown-linux-gnu
          - os: ubuntu-22.04
            target: aarch64-unknown-linux-gnu
          - os: ubuntu-22.04
            target: armv7-unknown-linux-gnueabihf
          - os: ubuntu-22.04
            target: arm-unknown-linux-gnueabihf
          - os: ubuntu-22.04
            target: armv5te-unknown-linux-gnueabi

    steps:
      - name: Checkout
        uses: actions/checkout@11bd71901bbe5b1630ceea73d27597364c9af683 # v4.2.2

      - name: Install rust
        uses: dtolnay/rust-toolchain@c5a29ddb4d9d194e7c84ec8c3fba61b1c31fee8c # stable
        with:
          toolchain: stable

      - name: Cache cargo registry
        uses: Swatinem/rust-cache@82a92a6e8fbeee089604da2575dc567ae9ddeaab # v2.7.5

      - name: Install cross
        if: ${{ startsWith(matrix.settings.os, 'ubuntu') && !startsWith(matrix.settings.target, 'x86_64') }}
        run: cargo install cross --git https://github.com/cross-rs/cross --rev 36c0d7810ddde073f603c82d896c2a6c886ff7a4

      - name: Add build architecture
        run: rustup target add ${{ matrix.settings.target }}

      # Build Rust natively
      - name: Build Rust native for - ${{ matrix.settings.target }}
        if: ${{ !startsWith(matrix.settings.os, 'ubuntu') || startsWith(matrix.settings.target, 'x86_64') }}
        env:
          RUSTFLAGS: "-D warnings"
          MACOSX_DEPLOYMENT_TARGET: "10.14" # allows using new macos runner versions while still supporting older systems
        run: cargo build --target ${{ matrix.settings.target }} --release
        working-directory: extensions/Bitwarden.OPAQUE/rust

      # Build Rust using cross
      - name: Build Rust cross for - ${{ matrix.settings.target }}
        if: ${{ startsWith(matrix.settings.os, 'ubuntu') && !startsWith(matrix.settings.target, 'x86_64') }}
        env:
          RUSTFLAGS: "-D warnings"
        run: cross build --target ${{ matrix.settings.target }} --release
        working-directory: extensions/Bitwarden.OPAQUE/rust

      - name: Upload Artifact
        uses: actions/upload-artifact@b4b15b8c7c6ac21ea08fcf65892d2ee8f75cf882 # v4.4.3
        with:
          name: libopaque_ke_binding_files-${{ matrix.settings.target }}
          path: rust/target/${{ matrix.settings.target }}/release/*opaque_ke_binding.{dll,so,dylib}

  collect_artifacts:
    name: Collect and Upload All Artifacts
    runs-on: ubuntu-22.04
    needs: build_rust
    steps:
      - name: Download x86_64-apple-darwin files
        uses: actions/download-artifact@fa0a91b85d4f404e444e00e005971372dc801d16 # v4.1.8
        with:
          name: libopaque_ke_binding_files-x86_64-apple-darwin
          path: runtimes/osx-x64/native

      - name: Download aarch64-apple-darwin files
        uses: actions/download-artifact@fa0a91b85d4f404e444e00e005971372dc801d16 # v4.1.8
        with:
          name: libopaque_ke_binding_files-aarch64-apple-darwin
          path: runtimes/osx-arm64/native

      - name: Download x86_64-pc-windows-msvc files
        uses: actions/download-artifact@fa0a91b85d4f404e444e00e005971372dc801d16 # v4.1.8
        with:
          name: libopaque_ke_binding_files-x86_64-pc-windows-msvc
          path: runtimes/win-x64/native

      - name: Download x86_64-unknown-linux-gnu files
        uses: actions/download-artifact@fa0a91b85d4f404e444e00e005971372dc801d16 # v4.1.8
        with:
          name: libopaque_ke_binding_files-x86_64-unknown-linux-gnu
          path: runtimes/linux-x64/native

      - name: Download aarch64-unknown-linux-gnu files
        uses: actions/download-artifact@fa0a91b85d4f404e444e00e005971372dc801d16 # v4.1.8
        with:
          name: libopaque_ke_binding_files-aarch64-unknown-linux-gnu
          path: runtimes/linux-arm64/native

      - name: Download armv7-unknown-linux-gnueabihf files
        uses: actions/download-artifact@fa0a91b85d4f404e444e00e005971372dc801d16 # v4.1.8
        with:
          name: libopaque_ke_binding_files-armv7-unknown-linux-gnueabihf
          path: runtimes/linux-arm/native

      - name: Download arm-unknown-linux-gnueabihf files
        uses: actions/download-artifact@fa0a91b85d4f404e444e00e005971372dc801d16 # v4.1.8
        with:
          name: libopaque_ke_binding_files-arm-unknown-linux-gnueabihf
          path: runtimes/linux-armv6/native

      - name: Download armv5te-unknown-linux-gnueabi files
        uses: actions/download-artifact@fa0a91b85d4f404e444e00e005971372dc801d16 # v4.1.8
        with:
          name: libopaque_ke_binding_files-armv5te-unknown-linux-gnueabi
          path: runtimes/linux-armel/native

      - name: Upload Combined Artifact
        uses: actions/upload-artifact@b4b15b8c7c6ac21ea08fcf65892d2ee8f75cf882 # v4.4.3
        with:
          name: libopaque_ke_binding_all_files
          path: |
            runtimes/**/*
