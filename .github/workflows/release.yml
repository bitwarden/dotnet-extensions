name: Release

on:
  workflow_dispatch:
    inputs:
      package:
        description: Which package to release
        required: true
        type: choice
        options:
        - Bitwarden.Server.Sdk
      type:
        description: The type of this release
        required: true
        type: choice
        options:
        - ga
        - beta
        - hotfix

env:
  PACKAGE_DIRECTORY: './extensions/${{ inputs.package }}'

jobs:
  build-artifact:
    name: Build Artifact
    runs-on: ubuntu-22.04
    steps:
      - name: Check out repo
        uses: actions/checkout@11bd71901bbe5b1630ceea73d27597364c9af683 # v4.2.2

      - name: Set up .NET
        uses: actions/setup-dotnet@3e891b0cb619bf60e2c25674b222b8940e2c1c25 # v4.1.0

      - name: Pack
        run: dotnet pack -c Release -p:IsPreRelease=$IS_PRERELEASE
        working-directory: '${{ env.PACKAGE_DIRECTORY }}/src'
        env:
          IS_PRERELEASE: ${{ inputs.type == 'prerelease' }}

      # Creating this github release is what should trigger the actual releasing of the nuget package
      - name: Create GitHub Release
        run: echo "Create GitHub Release"

      - name: Run Version Bumper
        id: version-bumper
        shell: pwsh
        env:
          PACKAGE_NAME: ${{ inputs.package }}
          BUMP_TYPE: ${{ inputs.type }}
        run: |
          echo "NEW_VERSION=$(./scrips/UpdatePackageVersion.ps1 -PackageName $env:PACKAGE_NAME -BumpType $env:BUMP_TYPE)" >> $env:GITHUB_OUTPUT

      - name: Create PR
        uses: actions/github-script@60a0d83039c74a4aee543508d2ffcb1c3799cdea # v7.0.1
        with:
          script: |
            const packageName = '${{ inputs.package }}';
            const bumpType = '${{ inputs.type }}';
            const newVersion = '${{ steps.version-bumper.outputs.NEW_VERSION }}';

            // configure git
            await exec.exec(`git config user.name "github-actions"`);
            await exec.exec(`git config user.email "github-actions@github.com"`);

            const versionBumpBranch = `version-bump/${packageName}-to-${newVersion}`;
            await exec.exec(`git checkout -b ${versionBumpBranch}`);
