<Project Sdk="Microsoft.NET.Sdk">

  <PropertyGroup>
    <TargetFramework>net8.0</TargetFramework>
    <IsPackable>true</IsPackable>
    <ImplicitUsings>enable</ImplicitUsings>
    <Nullable>enable</Nullable>

    <AllowUnsafeBlocks>true</AllowUnsafeBlocks>
  </PropertyGroup>

  <PropertyGroup>
    <Authors>Bitwarden Inc.</Authors>
    <Description>OPAQUE-KE bindings for .NET and C# by Bitwarden</Description>

    <PackageProjectUrl>https://github.com/bitwarden/dotnet-extensions</PackageProjectUrl>
    <PackageReleaseNotes>https://github.com/bitwarden/dotnet-extensions/releases</PackageReleaseNotes>
    <PackageLicenseExpression>GPL-3.0-only</PackageLicenseExpression>
    <PackageRequireLicenseAcceptance>false</PackageRequireLicenseAcceptance>
    <PackageReadmeFile>README.md</PackageReadmeFile>
    <GenerateDocumentationFile>true</GenerateDocumentationFile>
    <PublishRepositoryUrl>true</PublishRepositoryUrl>
    <EmbedUntrackedSources>true</EmbedUntrackedSources>

    <RootNamespace>Bitwarden.Opaque</RootNamespace>
    <Title>Bitwarden OPAQUE-KE library</Title>
    <Copyright>Bitwarden Inc.</Copyright>
    <Product>Opaque</Product>

    <PackageId>Bitwarden.Opaque</PackageId>
    <PackageIcon>bitwarden.png</PackageIcon>
    <PackageTags>Bitwarden;Opaque;PAKE;.NET</PackageTags>

    <VersionPrefix>0.1.0</VersionPrefix>
    <PreReleaseVersionLabel>beta</PreReleaseVersionLabel>
    <PreReleaseVersionIteration>3</PreReleaseVersionIteration>
    <VersionSuffix Condition="'$(VersionSuffix)' == '' AND '$(IsPreRelease)' == 'true'">$(PreReleaseVersionLabel).$(PreReleaseVersionIteration)</VersionSuffix>
  </PropertyGroup>

  <ItemGroup>
    <None Include="bitwarden.png" Pack="true" PackagePath="\" />
    <None Include="README.md" Pack="true" PackagePath="\" />
    <None Include="../../../LICENSE.txt" Pack="true" PackagePath="\" />
  </ItemGroup>

  <PropertyGroup>
    <!-- By default, build the native libs in Debug mode but not Release mode -->
    <!-- Additionally, you can use `-p BuildOpaqueLib=<bool>` to override that -->
    <BuildOpaqueLib Condition="'$(BuildOpaqueLib)' == '' And '$(Configuration)' == 'Debug'">true</BuildOpaqueLib>
    <BuildOpaqueLib Condition="'$(BuildOpaqueLib)' == '' And '$(Configuration)' != 'Debug'">false</BuildOpaqueLib>
    <BuildOpaqueLib Condition="'$(BuildOpaqueLib)' != ''">$(BuildOpaqueLib)</BuildOpaqueLib>

    <CurrentRID>$(NETCoreSdkRuntimeIdentifier)</CurrentRID>
  </PropertyGroup>
  <PropertyGroup Condition="$([MSBuild]::IsOSPlatform('Windows'))">
    <RustLibraryFile>opaque_ke_binding.dll</RustLibraryFile>
  </PropertyGroup>
  <PropertyGroup Condition="$([MSBuild]::IsOSPlatform('Linux'))">
    <RustLibraryFile>libopaque_ke_binding.so</RustLibraryFile>
  </PropertyGroup>
  <PropertyGroup Condition="$([MSBuild]::IsOSPlatform('OSX'))">
    <RustLibraryFile>libopaque_ke_binding.dylib</RustLibraryFile>
  </PropertyGroup>

  <Target Name="BuildOpaqueLibMessage" BeforeTargets="PreBuildEvent" >
      <Message Text="[Bitwarden.Opaque] Building native library: $(BuildOpaqueLib)" Importance="High"/>
  </Target>

  <!-- Build native libraries in Debug mode by default -->
  <Target Name="CargoBuild" BeforeTargets="CopyLib" Condition="'$(BuildOpaqueLib)' == 'true'">
    <Exec WorkingDirectory="$(ProjectDir)/../rust" Command="cargo build --release" />
    <!-- Move the library to the dist folder, so we only need one copy step -->
    <Exec WorkingDirectory="$(ProjectDir)/../rust" Command="mkdir -p ./dist/$(CurrentRID)/native" />
    <Exec WorkingDirectory="$(ProjectDir)/../rust" Command="cp target/release/$(RustLibraryFile) ./dist/$(CurrentRID)/native" />
  </Target>

  <!-- Copy native libraries -->
  <Target Name="CopyLib" BeforeTargets="PreBuildEvent">
    <ItemGroup>
      <Content Include="$(ProjectDir)/../rust/dist/**/*">
        <Link>$(RustLibraryFile)</Link>
        <CopyToOutputDirectory>Always</CopyToOutputDirectory>
        <PackageCopyToOutput>true</PackageCopyToOutput>
        <PackagePath>runtimes/</PackagePath>
      </Content>
    </ItemGroup>
  </Target>
</Project>